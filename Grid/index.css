* {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
}
body {
    background: radial-gradient(circle, #fff, #bbb);
    padding: 20px;
}

.grid-container{
    border: 2px solid #000;
    display: grid;
    /*De esta forma estamos definiendo tres columnas y tres filas, cada una de ellas con 150px
     No solo podemos inicializar las columnas y filas con px tam*/
    /*grid-template-rows: 150px 150px 150px;
    /*grid-template-columns: 150px 150px 150px;
    Tambien podemos utilizar el metodo repeat() para definir el numero de columnas y filas que queremos mostrar y el tamano de ellas*/
    /*Primero indicamos el numero de columnas que queremos definir y despues indicamos el tamano que queremos darle*/

    grid-template-rows: repeat(3, 150px) 1fr ;
    
    /*En grid tambien existen propiedades como flex-grow, pero se indican de forma distinta*/
    grid-template-columns: 150px 150px 150px 1fr;
    /*En este caso indicar que el ancho de una columna sera 1fr sera como si estuvieramos indicando en flex que ese container
    tuviese flex-grow: 1, de esta forma todo el espacio libre que quede lo aprovechara */
    /*Con grid-gap lo que estoy haciendo es serparar las distintas celdas, pero NO LAS SEPARO DE LOS BORDES, solo entre ellas*/
    /*grid-gap: 10px;*/
    /*Si utilizamos el shortHand de grid-column-gap solo se separarian las columnas y lo mismo si utilizamos grid-row-gap*/
}
.grid-item{
    border: 1px solid #000;

}
.grid-item:first-child {
    background: #900;
    /*De esta forma estariamos fusioanando las dos primeras columnas*/
    /*grid-column: 1 / 3;
    /*De esta otra forma estariamos fusionando las dos primeras filas
    grid-row: 1 / 3;*/
    
}
/*De esta forma seleccionamos el segundo elemento de la grid, es mejor hacerlo de esta manera que no poniendo second-child*/
.grid-item:nth-child(2) {
    background: #090;
    /*Las dos lineas de abajo es un shorthand de decir: grid-column-start : 3 grid-column-end: 5 
    y viceversa
    */
    /*grid-column: 3 / 5;
    grid-row: 1 / 3;
    /*Despues tenemos span, que nos facilita un poco la vida si no entendemos bien lo de arriba, con el span
    no tenemos que contar lineas si no que desde la fila o columna en donde estemos esta sera el punto de partida y con
    span x le indicaremos la cantidad de filas o columnas que queremos fusionar*/
   /* grid-column: 3 / span 2;
    grid-row: 1 / span 2;*/
}
